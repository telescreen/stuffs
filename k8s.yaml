description: A mini k8s cluster for testing
series: bionic
variables:
  kubernetes-channel: &kubernetes-channel 1.15/stable
machines:
  '0':
    constraints: cores=1 mem=2G root-disk=12G
    series: bionic
  '1':
    constraints: cores=1 mem=2G root-disk=12G
    series: bionic
  '2':
    constraints: cores=1 mem=2G root-disk=12G
    series: bionic
  '3':
    constraints: cores=1 mem=2G root-disk=12G
    series: bionic

services:
  # Containerd is used as container runtime
  containerd:
    charm: cs:~containers/containerd
  #docker:
  #  charm: cs:~containers/docker-4
  easyrsa:
    charm: cs:~containers/easyrsa
    num_units: 1
    to: 
    - lxd:0
  etcd:
    charm: cs:~containers/etcd
    num_units: 1
    options:
      channel: 3.2/stable
    to:
    - 0
  kubeapi-load-balancer:
    charm: cs:~containers/kubeapi-load-balancer
    expose: true
    num_units: 1
    to:
    - 0
  kubernetes-master:
    charm: cs:~containers/kubernetes-master-700
    num_units: 1
    options:
      allow-privileged: "true"
      channel: *kubernetes-channel
    to:
    - 0
  kubernetes-worker:
    charm: cs:~containers/kubernetes-worker-552
    expose: true
    num_units: 3
    options:
      ingress: true
      channel: *kubernetes-channel
    to:
    - 1
    - 2
    - 3
relations:
- - kubernetes-master:kube-api-endpoint
  - kubeapi-load-balancer:apiserver
- - kubernetes-master:loadbalancer
  - kubeapi-load-balancer:loadbalancer
- - kubernetes-master:kube-control
  - kubernetes-worker:kube-control
- - kubernetes-master:certificates
  - easyrsa:client
- - etcd:certificates
  - easyrsa:client
- - kubernetes-master:etcd
  - etcd:db
- - kubernetes-worker:certificates
  - easyrsa:client
- - kubernetes-worker:kube-api-endpoint
  - kubeapi-load-balancer:website
- - kubeapi-load-balancer:certificates
  - easyrsa:client
- - containerd
  - kubernetes-worker:container-runtime
- - containerd
  - kubernetes-master:container-runtime
#- - docker
#  - kubernetes-worker:container-runtime
#- - docker
#  - kubernetes-master:container-runtime
