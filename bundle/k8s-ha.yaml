description: A mini k8s cluster for testing

series: bionic

variables:
  kubernetes-channel: &kubernetes-channel 1.15/stable
  kubeapi-vip: &kubeapi-vip "10.23.23.20"

machines:
  '0':
    constraints: cores=1 mem=1G root-disk=12G
    series: bionic
  '1':
    constraints: cores=1 mem=1G root-disk=12G
    series: bionic
  '2':
    constraints: cores=1 mem=1G root-disk=12G
    series: bionic
  '3':
    constraints: cores=1 mem=2G root-disk=12G
    series: bionic
  '4':
    constraints: cores=1 mem=2G root-disk=12G
    series: bionic
  
services:
  # Containerd is used as container runtime
  containerd:
    charm: cs:~containers/containerd
  #docker:
  #  charm: cs:~containers/docker-4
  easyrsa:
    charm: cs:~containers/easyrsa
    num_units: 1
    to: 
    - 0
  etcd:
    charm: cs:~containers/etcd
    num_units: 1
    options:
      channel: 3.2/stable
    to:
    - 0
  #hacluster-kubeapi:
  #  charm: cs:hacluster-55
  #  num_units: 0
  keepalived:
    charm: cs:~containers/keepalived-28
    num_units: 0
    options:
      virtual_ip: *kubeapi-vip
      port: 443
  kubeapi-load-balancer:
    charm: cs:~containers/kubeapi-load-balancer
    expose: true
    num_units: 2
    options:
      #ha-cluster-vip: *kubeapi-vip
      extra_sans: *kubeapi-vip
    to:
    - 1
    - 2
  kubernetes-master:
    charm: cs:~containers/kubernetes-master
    num_units: 2
    options:
      allow-privileged: "true"
      channel: *kubernetes-channel
      extra_sans: *kubeapi-vip
    to:
    - 1
    - 2
  kubernetes-worker:
    charm: cs:~containers/kubernetes-worker
    expose: true
    num_units: 2
    options:
      ingress: true
      channel: *kubernetes-channel
    to:
    - 3
    - 4

relations:
- - kubernetes-master:kube-api-endpoint
  - kubeapi-load-balancer:apiserver
- - kubernetes-master:loadbalancer
  - kubeapi-load-balancer:loadbalancer

# hacluster
#- - kubeapi-load-balancer:ha
#  - hacluster-kubeapi:ha

- - kubernetes-master:kube-control
  - kubernetes-worker:kube-control
- - kubernetes-master:certificates
  - easyrsa:client
- - etcd:certificates
  - easyrsa:client
- - kubernetes-master:etcd
  - etcd:db
- - kubernetes-worker:certificates
  - easyrsa:client
- - kubernetes-worker:kube-api-endpoint
  - kubeapi-load-balancer:website
- - kubeapi-load-balancer:certificates
  - easyrsa:client
- - containerd
  - kubernetes-worker:container-runtime
- - containerd
  - kubernetes-master:container-runtime

# keepalived
- - keepalived:juju-info
  - kubeapi-load-balancer:juju-info
- - keepalived:lb-sink
  - kubeapi-load-balancer:website
- - keepalived:website
  - kubernetes-worker:kube-api-endpoint

# docker
#- - docker
#  - kubernetes-worker:container-runtime
#- - docker
#  - kubernetes-master:container-runtime
